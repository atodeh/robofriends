{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/Card.js","components/CardList.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","Card","id","name","email","src","alt","CardList","robots","map","item","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCHK,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACGJ,EAAMK,YCSEC,EAZF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MACxB,OACE,sBAAKd,UAAU,sDAAf,UACE,qBAAKe,IAAG,+BAA0BH,EAA1B,iBAA6CI,IAAI,WACzD,gCACE,6BAAKH,IACL,4BAAIC,WCOGG,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAGIA,EAAOC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBR,GAAIQ,EAAKR,GAAIC,KAAMO,EAAKP,KAAMC,MAAOM,EAAKN,OAAnDM,EAAKR,UCgC5BS,G,wDAlCb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAORiB,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAP1C,EAAKC,MAAO,CACVV,OAAQ,GACRO,YAAa,IAJE,E,qDAYnB,WAAqB,IAAD,OAClBI,MAAM,6CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEN,OAAQe,S,oBAG3C,WAAU,IAAD,OACDC,EAAiBC,KAAKP,MAAMV,OAAOkB,QAAO,SAAAhB,GAC9C,OAAOA,EAAKP,KAAKwB,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAEjE,OACA,sBAAKrC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcoC,KAAKb,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUJ,OAAQgB,a,GA5BRK,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d4b7466d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type='search'\r\n        placeholder='Search Robots'\r\n        onChange={searchChange}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n\r\n","import React from 'react';\r\n\r\nconst Card = ({ id, name, email } ) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt='Robots' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p> \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {/*This mapped array contains all of our robot cards*/}\r\n      {\r\n        robots.map(item => <Card key={item.id} id={item.id} name={item.name} email={item.email} />)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport CardList from '../components/CardList';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props) //calls constructor of Component\r\n    this.state= {\r\n      robots: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value})\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter(item => {\r\n      return item.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n    })\r\n    return (\r\n    <div className='tc'>\r\n      <h1 className=\"f1\">RoboFriends</h1>\r\n      <SearchBox searchChange={this.onSearchChange} />\r\n      <Scroll>\r\n        <CardList robots={filteredRobots} />\r\n      </Scroll>\r\n    </div>\r\n  );\r\n  } \r\n}\r\n\r\nexport default App;      ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}